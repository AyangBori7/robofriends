{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAqBeA,EAlBJ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GAEzB,OACG,sBAAKC,UAAU,sDAAf,UACC,qBAAMC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACtB,gCACA,6BAAKF,IACL,4BAAIC,WCYMK,EAnBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACjB,OAEC,8BAEAA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OAAQ,cAAC,EAAD,CAERR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCUSC,EAjBC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAElB,OAEC,qBAAKT,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVU,KAAK,SACJC,YAAY,gBACVC,SAAUH,OCECI,EAVF,SAACC,GACd,OACA,qBAAKC,MAAO,CAACC,UAAW,SAASC,OAAQ,kBAAkBC,OAAO,SAAlE,SACEJ,EAAMK,YCyBOC,E,kDA5Bf,WAAYN,GAAO,IAAD,8BAElB,cAAMA,IACDO,MAAM,CACVC,UAAS,GAJQ,E,qDASlB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAKzB,WAEC,OAAGG,KAAKJ,MAAMC,SACN,0DAGDG,KAAKX,MAAMK,a,GAvBQQ,aC+DZC,G,wDAxDd,aAAc,IAAD,8BACZ,gBAwBDC,eAAe,SAACC,GAEf,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAxBzC,EAAKZ,MAAM,CAEVjB,OAAQ,GACR2B,YAAY,IAND,E,qDAab,WAAqB,IAAD,OACnBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAEzBF,MAAK,SAAAG,GAAK,OAAG,EAAKZ,SAAS,CAACtB,OAAOkC,S,oBAarC,WAEC,MAA2Bb,KAAKJ,MAAzBjB,EAAP,EAAOA,OAAO2B,EAAd,EAAcA,YACRQ,EAAenC,EAAOoC,QAAO,SAAAC,GAElC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEtD,OAAQtC,EAAOwC,OAGd,sBAAK5C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQmC,WAPlB,6C,GAvCeZ,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAK/CX,M","file":"static/js/main.2d2fcdf6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card=({ name, email,id})=>{\r\n\r\n\treturn(\t\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n     <img  alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n     <div>\r\n     <h2>{name}</h2>\r\n     <p>{email}</p>\r\n     </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\t\t);\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=>{\r\nreturn(\r\n\r\n <div>\r\n\t{\r\n\trobots.map((user,i)=> {\r\n\treturn (<Card \r\n\tkey={i} \r\n\tid={robots[i].id} \r\n\tname={robots[i].name} \r\n\temail={robots[i].email} />\r\n\t);\r\n})\r\n\t}\r\n</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox=({searchChange})=>{\r\n\r\nreturn (\r\n\r\n\t<div className='pa2'>\r\n\t<input \r\n\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\ttype='search'\r\n\t placeholder='search robots'\r\n    onChange={searchChange}\r\n\t />\r\n\t </div>\r\n\t);\r\n\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\n\r\nconst Scroll=(props)=>{\r\nreturn(\r\n<div style={{overflowY: 'scroll',border: '5px solid black',height:'800px'}}>\r\n {props.children}\r\n</div>\r\n\t)\r\n\r\n\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\r\nconstructor(props){\r\n\r\nsuper(props);\r\nthis.state={\r\n\thasError:false\r\n}\r\n\r\n}\r\n\r\ncomponentDidCatch(error,info){\r\n\tthis.setState({hasError:true})\r\n}\r\n\r\n\r\n\r\nrender(){\r\n\r\n\tif(this.state.hasError){\r\n\t\treturn <h1>Oooops. That is not good</h1>\r\n\t}\r\n\r\n\treturn this.props.children\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\r\n\t\tthis.state={\r\n\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield:''\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tcomponentDidMount( ){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\r\n\t\t.then(users=> this.setState({robots:users}));\r\n\r\n\t} \r\n\r\n\r\n\r\n\r\n\r\n\tonSearchChange=(event)=>{\r\n\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst{ robots,searchfield}=this.state;\r\n\t\tconst filteredRobots=robots.filter(robot=>{\r\n\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\t\r\n\t\treturn !robots.length?\r\n\t\t\t<h1>Loading</h1> :\r\n\t\t\t(\r\n\t\t\t<div className='tc'>\t\r\n\t\t\t<h1 className='f1'>Robofriends</h1>\r\n\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t<Scroll>\r\n\t\t\t<ErrorBoundry>\r\n\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t</ErrorBoundry>\r\n\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from'./containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}